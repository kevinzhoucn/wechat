{% extends 'AcmeWebBundle:Layout:device_base.html.twig' %}
{% block title %}设备透传{% endblock %}

{% block body_content %}
    <div class="container-fluid">
        <div class="row">
            {% include 'AcmeWebBundle:Common:mqtt_sidebar.html.twig' %}

            <div class="col-sm-4 col-sm-offset-3 col-md-4 col-md-offset-2 main">
                <h1 class="page-header">源设备</h1>
                <div class="row placeholders">
                    <form id="source_form" class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-1 control-label"></label>
                            <div class="col-sm-10">
                                <select id="source_dev" class="form-control">
                                    {% if devices.count > 0 %}
                                        {% for item in devices %}
                                            <option>{{ item.name }}</option>
                                        {% endfor %}
                                    {% else %}
                                        <option>您没有设备</option>
                                    {% endif %}
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-sm-4 col-sm-offset-0 col-md-4 col-md-offset-0 main">
                <h1 class="page-header">目标设备</h1>
                <div class="row placeholders">
                    <form id="target_form" class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-1 control-label"></label>
                            <div class="col-sm-10">
                                <select id="target_dev" class="form-control">
                                    {% if devices.count > 0 %}
                                        {% for item in devices %}
                                            <option>{{ item.name }}</option>
                                        {% endfor %}
                                    {% else %}
                                        <option>您没有设备</option>
                                    {% endif %}
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-4 col-sm-offset-3 col-md-4 col-md-offset-2 main">
                <div class="row placeholders">
                    <button id="butSubmit" class="btn btn-primary">设置透传</button>
                </div>
            </div>
        </div>
{# 
        <div class="row">
            <div class="col-sm-4 col-sm-offset-3 col-md-4 col-md-offset-2 main">
              <h1 class="page-header">日志</h1>

                <div class="row placeholders">    
                    <div class="col-sm-10">
                        <pre id="info" style="min-height:40px"></pre>
                    </div>
                </div>
            </div>
        </div> #}
    </div>
{% endblock %}

{% block body_javascript %}
    <script src='/js/jquery-1.7.2.min.js'></script>
    <script src="/js/mqttws31.js"></script>
    <script>//<![CDATA[
        $(document).ready(function(){
          // $("#connect_clientId").val("example-"+(Math.floor(Math.random() * 100000)));
          var clientId = "clientdemo-" + (Math.floor(Math.random() * 100000));
          if( !window.WebSocket) {
            // $("#connect").html("\
            //     <h1>Get a new Web Browser!</h1>\
            //     <p>\
            //     Your browser does not support WebSockets. This example will not work properly.<br>\
            //     Please use a Web Browser with WebSockets support (WebKit or Google Chrome).\
            //     </p>\
            // ");
          } else {            
            var client, destination;
            
            var host = "168.63.134.186";
            // var host = "";
            var port = "61623";
            var user = "admin";
            var password = "password";
            
            destination = "MQTT/SUBCONFIG/";

            client = new Messaging.Client(host, Number(port), clientId);

            // the client is notified when it is connected to the server.
            var onConnect = function(frame) {
                debug("connected to MQTT");
                // debug("connect to topic: " + destination);
                // client.subscribe(destination);
            };  

            // this allows to display debug logs directly on the web page
            var debug = function(str) {
                $("#info").append(document.createTextNode(str + "\n"));
            };  

            $('#butSubmit').click(function() {
                // var text = $('#send_form_input').val();
                var oridev = $("#source_dev").val();
                var targetdev = $("#target_dev").val();

                if( oridev == targetdev ){
                    alert("请选择不同设备!");
                    return false;
                }

                if( oridev && targetdev ) {
                    var msg = "oridev=" + oridev;
                    message = new Messaging.Message(msg);
                    message.destinationName = "IOTCOM/SUBCONFIG/{{ username }}/" + targetdev;
                    client.send(message);

                    debug("设备透传: " + oridev + " => " + targetdev);
                    alert("设置透传成功：" + oridev + "=>" + targetdev + "!");
                }

              // if (text) {
              //   message = new Messaging.Message(text);
              //   message.destinationName = destination;
              //   client.send(message);
              //   $('#send_form_input').val("");
              // }
              return false;
            });

            function sendBindInfo() {

            }

            function onFailure(failure) {
              debug("failure");
              debug(failure.errorMessage);
            }

            function onMessageArrived(message) {
              // var p = document.createElement("p");
              // var t = document.createTextNode(message.payloadString);
              // p.appendChild(t);

              // $("#messages").append(p);
              var total_messages = $("#messages").text();
              if( total_messages.length > 1000 ) $("#messages").text("");
              $("#messages").append(document.createTextNode(message.payloadString));
              // alert(message.payloadString);
            }

            function onConnectionLost(responseObject) {
              if (responseObject.errorCode !== 0) {
                debug(client.clientId + ": " + responseObject.errorCode + "\n");
              }
            }

            client.onConnect = onConnect;

            client.onMessageArrived = onMessageArrived;
            client.onConnectionLost = onConnectionLost;            

            client.connect({
                userName:user, 
                password:password, 
                onSuccess:onConnect, 
                onFailure:onFailure
            });
          }
        });
    //]]></script>
{% endblock %}